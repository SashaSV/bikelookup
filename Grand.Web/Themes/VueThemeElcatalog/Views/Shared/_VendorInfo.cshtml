@model VendorModel
@{
    <b-card class="mt-3">
        <b-row>
            <b-col xl="2" lg="3" md="4" class="align-items-center justify-content-center d-flex">
                <b-avatar size="auto" alt="@Model.PictureModel.AlternateText" src="@Model.PictureModel.ImageUrl">
            </b-col>
            <b-col xl="10" lg="9" md="8" class="align-items-center d-flex">
                <div>
                    <h1 class="h2 generalTitle w-100">
                        @Model.Name
                    </h1>
                    @if (Model.AllowCustomersToContactVendors && !Model.IsPrivatePerson)
                    {
                        <b-button variant="info" size="sm" class="contact-vendor-button float-xs-right" onclick="location = ('@Url.RouteUrl("ContactVendor", new { vendorId = Model.Id })')">
                            @T("ContactVendor")
                        </b-button>
                    }
                    @await Component.InvokeAsync("Widget", new { widgetZone = "vendordetails_top", additionalData = Model.Id })
                    @*description*@
                    @if (!String.IsNullOrWhiteSpace(Model.Description))
                    {
                        <article class="text-xs-center generalMarginSupporter vendor-description">
                            @Html.Raw(Model.Description)
                        </article> } @*review*@
                    @if (Model.VendorReviewOverview.AllowCustomerReviews)
                    {
                        <div>
                            <partial name="_VendorReviewOverview" model="Model.VendorReviewOverview" />
                        </div>
                    }
                    @if (Model.Address != null)
                    {
                        <ul class="info px-0 mb-0">
                            @if (Model.Address.CompanyEnabled && !String.IsNullOrEmpty(Model.Address.Company) && !Model.IsPrivatePerson)
                            {
                                <li class="company">
                                    <label class="col-form-label">@T("Address.Fields.Company"):</label>
                                    @Model.Address.Company
                                </li>
                            }
                            @if (Model.Address.StreetAddressEnabled && !String.IsNullOrEmpty(Model.Address.Address1) && !Model.IsPrivatePerson)
                            {
                                <li class="address1">
                                    <label class="col-form-label w-100">@T("Address.Fields.Address1"):</label>
                                    @Model.Address.Address1
                                </li>
                            }
                            @if (Model.Address.StreetAddress2Enabled && !String.IsNullOrEmpty(Model.Address.Address2) && !Model.IsPrivatePerson)
                            {
                                <li class="address2">
                                    <label class="col-form-label">@T("Address.Fields.Address2"):</label>
                                    @Model.Address.Address2
                                </li>
                            }
                            @if (Model.Address.CityEnabled || Model.Address.StateProvinceEnabled || Model.Address.ZipPostalCodeEnabled)
                            {
                                var cityStateZip = "";
                                if (Model.Address.CityEnabled && !String.IsNullOrEmpty(Model.Address.City))
                                {
                                    cityStateZip = Model.Address.City;
                                    if (Model.Address.StateProvinceEnabled || Model.Address.ZipPostalCodeEnabled)
                                    {
                                        cityStateZip += ",";
                                    }
                                }
                                if (Model.Address.StateProvinceEnabled)
                                {
                                    if (!String.IsNullOrEmpty(cityStateZip))
                                    {
                                        cityStateZip += " ";
                                    }
                                    cityStateZip += Model.Address.StateProvinceName;
                                }
                                if (Model.Address.ZipPostalCodeEnabled)
                                {
                                    if (!String.IsNullOrEmpty(cityStateZip))
                                    {
                                        cityStateZip += " ";
                                    }
                                    cityStateZip += Model.Address.ZipPostalCode;
                                }
                                if (!String.IsNullOrEmpty(cityStateZip))
                                {
                                    <li class="city-state-zip">
                                        <label class="col-form-label">@T("Address.Fields.City"):</label>
                                        @cityStateZip
                                    </li>
                                }
                            }

                            @if (Model.Address.CountryEnabled && !String.IsNullOrEmpty(Model.Address.CountryName))
                            {
                                <li class="country">
                                    @Model.Address.CountryName
                                </li>
                            }
                            @if (Model.Address.PhoneEnabled && !String.IsNullOrEmpty(Model.Address.PhoneNumber))
                            {
                                <li class="phone">
                                    <label class="col-form-label">@T("Address.Fields.PhoneNumber"):</label>
                                    @Model.Address.PhoneNumber
                                </li>
                            }
                            @if (Model.Address.FaxEnabled && !String.IsNullOrEmpty(Model.Address.FaxNumber))
                            {
                                <li class="fax">
                                    <label class="col-form-label">@T("Address.Fields.FaxNumber"):</label>
                                    @Model.Address.FaxNumber
                                </li>
                            }
                        </ul>}
                </div>
                @*<b-col cols="12">*@
            
                
       
                @*</b-col>*@
            </b-col>
        </b-row>
    </b-card>
}
