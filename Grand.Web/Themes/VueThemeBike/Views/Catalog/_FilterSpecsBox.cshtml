@using System
@model CatalogPagingFilteringModel.SpecificationFilterModel
@{
    var notFilteredItemsGroups = Model.NotFilteredItems.GroupBy(x=>x.SpecificationAttributeName);
}

@functions 
{
    public void SingleOption(CatalogPagingFilteringModel.SpecificationFilterItem item)
    {
        @if (String.IsNullOrEmpty(item.SpecificationAttributeOptionColorRgb))
        {
             <b-button size="sm" variant="light" class="mb-1 mr-1" href="@item.FilterUrl">
                 @item.SpecificationAttributeOptionName
             </b-button>
        }
        else
        {
         <b-button size="sm" variant="light" class="color-container mb-1 mr-1" href="@item.FilterUrl">
             <span class="color" title="@item.SpecificationAttributeOptionName" style="background-color: @(item.SpecificationAttributeOptionColorRgb);">&nbsp;</span>
         </b-button>
        }  
    }        

    public void SpecTree(List<CatalogPagingFilteringModel.SpecificationFilterItem> roots,
        IEnumerable<CatalogPagingFilteringModel.SpecificationFilterItem> group )
    {
        @foreach (var root in roots)
        {
            var children  = group.Where(g => g.SpecificationAttributeOptionParentSpecificationAttrOptionId == root.Id).ToList();
            if (!children.Any())
            {
                SingleOption(root);
                continue;
            }
            <b-col>
                <b-row>
                    <b-form-checkbox v-model="status" v-on:change="filterProducts('@root.FilterUrl')">
                    </b-form-checkbox>
                    <b-button v-b-toggle="'@root.Id'" size="lg" class="category-spec shadow-none pt-0">
                        @root.SpecificationAttributeOptionName

                        <span class="when-open ml-2">
                            <svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M10.091 0C15.6634 0 20.1819 4.51852 20.1819 10.091C20.1819 15.6634 15.6634 20.1819 10.091 20.1819C4.51785 20.1819 0 15.6637 0 10.091C0 4.51818 4.51785 0 10.091 0ZM10.091 1.51364C5.35383 1.51364 1.51364 5.35412 1.51364 10.091C1.51364 14.8278 5.35383 18.6683 10.091 18.6683C14.8274 18.6683 18.6683 14.8274 18.6683 10.091C18.6683 5.35448 14.8274 1.51364 10.091 1.51364ZM14.0423 8.02614L14.1273 8.09924C14.3966 8.36735 14.4219 8.78775 14.2027 9.0845L14.1296 9.16954L10.6271 12.6873C10.3581 12.9573 9.93619 12.9819 9.63945 12.7609L9.55445 12.6873L6.05188 9.16954C5.75696 8.87335 5.758 8.39416 6.05419 8.09924C6.32346 7.83113 6.74396 7.80761 7.03977 8.02808L7.1245 8.10155L10.0898 11.0799L13.057 8.10155C13.3251 7.83228 13.7455 7.80695 14.0423 8.02614Z" fill="#200E32"/>
                            </svg>
                        </span>
                        <span class="when-closed ml-2 ">
                            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M0 10C0 4.47779 4.47779 0 10 0C15.5222 0 20 4.47779 20 10C20 15.5229 15.5225 20 10 20C4.47745 20 0 15.5229 0 10ZM1.5 10C1.5 14.6944 5.30586 18.5 10 18.5C14.6941 18.5 18.5 14.6944 18.5 10C18.5 5.30621 14.6938 1.5 10 1.5C5.30621 1.5 1.5 5.30621 1.5 10ZM7.95379 6.08429L8.02623 6.00002C8.29192 5.73318 8.70853 5.70807 9.00261 5.92529L9.08689 5.99773L12.5729 9.46873C12.8405 9.73523 12.8649 10.1534 12.6459 10.4474L12.5729 10.5317L9.08689 14.0027C8.79336 14.2949 8.31849 14.2939 8.02623 14.0004C7.76054 13.7335 7.73723 13.3168 7.95572 13.0237L8.02851 12.9397L10.98 10.0012L8.02851 7.06067C7.76167 6.79498 7.73657 6.37837 7.95379 6.08429Z" fill="#200E32" />
                            </svg>
                        </span>
                    </b-button>
                </b-row>
                <b-collapse id="@root.Id" class="mt-2">
                    @foreach (var child in children.GroupBy(sp => sp.SpecificationAttributeOptionName).Select(gr => gr.First()))
                    {
                        var childrenOfChild =
                            group.Where(c => c.SpecificationAttributeOptionParentSpecificationAttrOptionId == child.Id).ToList();

                        @if (childrenOfChild.Any())
                        {
                            SpecTree(new List<CatalogPagingFilteringModel.SpecificationFilterItem> {child}, childrenOfChild);
                            continue;
                        }
                        SingleOption(child);
                    }
                </b-collapse>
            </b-col>
        }
    }
}

@if (Model.Enabled)
{
    <div id="block-product-spec-filter" class="block product-filter product-spec-filter">
        @*<h2 class="h5">
            <strong>@T("Filtering.SpecificationFilter")</strong>
        </h2>*@
        @if (Model.AlreadyFilteredItems.Any())
        {
            <b-card header="@T("Filtering.SpecificationFilter.CurrentlyFilteredBy")" header-tag="h6" class="filtered-items mb-3">
                <ul class="p-0 mb-0">
                    @{
                        var group = Model.AlreadyFilteredItems.GroupBy(x => x.SpecificationAttributeName);
                    }
                    @foreach (var item in group)
                    {
                        
                         var groupList = item.ToList();
                        
                        <li class="item">
                            <div class="mb-2">
                                <strong>@groupList[0].SpecificationAttributeName:</strong>
                            </div>
                            @{
                                var groupList2 = item.ToList();
                            }
                            <div class="d-inline-flex flex-wrap w-100">
                                @foreach (var spec in groupList)
                                {
                                    <b-link class="d-flex align-items-center mr-2 mb-2 pb-0" href="@spec.FilterUrl"> @spec.SpecificationAttributeOptionName<b-icon class="ml-2 text-danger" icon="x-circle-fill"></b-icon></b-link>
                                }
                            </div>
                        </li>
                    }
                </ul>
                <div class="remove-filter">
                    <b-button size="sm" variant="danger" href="@Model.RemoveFilterUrl">
                        @T("Filtering.SpecificationFilter.Remove")
                    </b-button>
                </div>
            </b-card>
        }
        <div class="filter-content viewBox">
            @if (Model.NotFilteredItems.Any())
            {
                var index = 0;
                <div class="available-items">
                    @foreach (var group in notFilteredItemsGroups)
                    {
                        index++;
                        var groupList = group.ToList();
                        <b-col cols="12" class="px-0">
                            <ul class="group product-spec-group">
                                <b-button align-h="start" v-b-toggle="'@groupList[0].Id'" size="lg" class="category-spec shadow-none px-0">
                                    <strong>
                                        @groupList[0].SpecificationAttributeName
                                    </strong>
                                                                        <span class="when-open ml-2">
                                                                            <svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                                <path d="M10.091 0C15.6634 0 20.1819 4.51852 20.1819 10.091C20.1819 15.6634 15.6634 20.1819 10.091 20.1819C4.51785 20.1819 0 15.6637 0 10.091C0 4.51818 4.51785 0 10.091 0ZM10.091 1.51364C5.35383 1.51364 1.51364 5.35412 1.51364 10.091C1.51364 14.8278 5.35383 18.6683 10.091 18.6683C14.8274 18.6683 18.6683 14.8274 18.6683 10.091C18.6683 5.35448 14.8274 1.51364 10.091 1.51364ZM14.0423 8.02614L14.1273 8.09924C14.3966 8.36735 14.4219 8.78775 14.2027 9.0845L14.1296 9.16954L10.6271 12.6873C10.3581 12.9573 9.93619 12.9819 9.63945 12.7609L9.55445 12.6873L6.05188 9.16954C5.75696 8.87335 5.758 8.39416 6.05419 8.09924C6.32346 7.83113 6.74396 7.80761 7.03977 8.02808L7.1245 8.10155L10.0898 11.0799L13.057 8.10155C13.3251 7.83228 13.7455 7.80695 14.0423 8.02614Z" fill="#200E32" />
                                                                            </svg>
                                                                        </span>
                                                                        <span class="when-closed ml-2 ">
                                                                            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                                <path d="M0 10C0 4.47779 4.47779 0 10 0C15.5222 0 20 4.47779 20 10C20 15.5229 15.5225 20 10 20C4.47745 20 0 15.5229 0 10ZM1.5 10C1.5 14.6944 5.30586 18.5 10 18.5C14.6941 18.5 18.5 14.6944 18.5 10C18.5 5.30621 14.6938 1.5 10 1.5C5.30621 1.5 1.5 5.30621 1.5 10ZM7.95379 6.08429L8.02623 6.00002C8.29192 5.73318 8.70853 5.70807 9.00261 5.92529L9.08689 5.99773L12.5729 9.46873C12.8405 9.73523 12.8649 10.1534 12.6459 10.4474L12.5729 10.5317L9.08689 14.0027C8.79336 14.2949 8.31849 14.2939 8.02623 14.0004C7.76054 13.7335 7.73723 13.3168 7.95572 13.0237L8.02851 12.9397L10.98 10.0012L8.02851 7.06067C7.76167 6.79498 7.73657 6.37837 7.95379 6.08429Z" fill="#200E32" />
                                                                            </svg>
                                                                        </span>

</b-button>
                                <b-collapse id="@groupList[0].Id" class="mt-2 pl-4">
                                    <li>
                                        @*<b-button-group size="sm" class="d-inline-flex flex-wrap">*@

                                            @{
                                                var roots
                                                    = group.Where(g => string.IsNullOrEmpty(g.SpecificationAttributeOptionParentSpecificationAttrOptionId))
                                                        .ToList();
                                                SpecTree(roots, group);
                                            }
                                        @*</b-button-group>*@
                                    </li>
                                </b-collapse>
                            </ul>
                        </b-col>
                    }
                </div>
            }
        </div>
    </div>
}