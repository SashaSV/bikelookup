@model ProductDetailsModel
@using Microsoft.AspNetCore.Http.Extensions
@inject SeoSettings seoSettings
@using Grand.Framework.Themes
@using Grand.Framework.UI
@inject IWorkContext workContext
@inject IThemeContext themeContext
@inject IPageHeadBuilder pagebuilder

@{
    var themeName = themeContext.WorkingThemeName;
    var supportRtl = workContext.WorkingLanguage.Rtl;
    if (supportRtl)
    {
        pagebuilder.AppendCssFileParts(ResourceLocation.Head, string.Format("~/Themes/{0}/Content/css/product/product.rtl.css", themeName));
    }
    else
    {
        pagebuilder.AppendCssFileParts(ResourceLocation.Head, string.Format("~/Themes/{0}/Content/css/product/product.css", themeName));
    }
}
@{
    Layout = "_ColumnsOne";

    //title, meta
    pagebuilder.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    pagebuilder.AddMetaDescriptionParts(Model.MetaDescription);
    pagebuilder.AddMetaKeywordParts(Model.MetaKeywords);

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Url.ActionContext.HttpContext.Request.Scheme);
        pagebuilder.AddCanonicalUrlParts(productUrl);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        pagebuilder.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:image:url\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + this.Url.ActionContext.HttpContext.Request.GetEncodedUrl() + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + this.Url.ActionContext.HttpContext.Request.GetEncodedUrl() + "\" />");
    }
}
@{
    //prepare "Add to cart" Axios link
  
    string addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = 1});
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}

<!--product breadcrumb-->
@section Breadcrumb
{
    <partial name="_ProductBreadcrumb" model="Model.Breadcrumb" />
}
@await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_after_breadcrumb", additionalData = Model.Id })
<div class="page product-details-page product-standard product-grouped">
    @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_top", additionalData = Model.Id })
    <form asp-route="Product" asp-route-sename="@Model.SeName" method="post" id="product-details-form">
        <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
            <b-container class="product-essential">
              
                    <div class="product-name">
                        <h2 class="generalTitle mb-3" itemprop="name" align="left">@Model.Name</h2>
                    </div>
                    <b-row>
                        <b-col cols="12" class="px-0 my-3">
                            <b-row>
                                <b-tabs content-class="mt-3" align="left" lazy="true">
                                    <b-tab title="@T("Products.Sellers")" active>
                                        <partial name="_ProductHeader" model="Model"/>
                                        <div class="product-collateral">
                                            <div>
                                                <!--associated products-->
                                                @foreach (var variant in Model.AssociatedProducts)
                                                {
                                                    @if (variant.VendorModel == null)
                                                    {
                                                        continue;
                                                        
                                                    }
                                                    <b-card no-body class="overflow-hidden associatedItem mb-3">
                                                     <b-row class="ml-2 mb-2 mt-4 justify-content-center vendor-title">
                                                         <a href="@variant.Url">
                                                             <h3  class="vendor-title" itemprop="name" align="center">@variant.VendorModel.Name</h3>
                                                         </a>
                                                     </b-row>
                                                     <b-row>        
                                                            <b-col lg="2" md="4" class="ml-2 mr-2 justify-content-left width" >
                                                                <b-row class="mb-2 justify-content-center"> 
                                                                    <a href="@variant.Url">
                                                                       <b-card-img fluid-grow="true" fluid="true" id="main-product-img-@variant.Id" alt="@variant.VendorModel.PictureModel.AlternateText" src="@variant.VendorModel.PictureModel.ImageUrl" class="rounded-0"></b-card-img>
                                                                    </a>
                                                                </b-row>
                                                                <b-row class="mb-3 justify-content-center">
                                                                    <div class="rating">
                                                                        @{
                                                                            decimal ratingValue = 0;
                                                                            var reviesCount = variant.VendorModel.NotApprovedTotalReviews + variant.VendorModel.NotApprovedTotalReviews;

                                                                            if (reviesCount != 0)
                                                                            {
                                                                                var ratingSum = variant.VendorModel.ApprovedRatingSum + variant.VendorModel.NotApprovedRatingSum;
                                                                                ratingValue = Convert.ToDecimal(((ratingSum * (double) 100) / reviesCount) / (double) 100);
                                                                            }
                                                                        }
                                                                        <b-form-rating id="rating-inline-grid-@Model.Id" aria-label="Rating" class="p-0" variant="warning" no-border size="sm" readonly inline value="@(ratingValue)" color="#F15A24"></b-form-rating>
                                                                        <b-link href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">@string.Format("(0)", reviesCount)</b-link>
                                                                    </div>     
                                                                </b-row>
                                                            </b-col>
                                                         <b-col lg="3" md="4">
                                                             @if (@variant.VendorModel.VendorSpecificationAttributes.Any())
                                                             {
                                                                 <div class="spec-container">
                                                                           
                                                                     @{
                                                                         var group = @variant.VendorModel.VendorSpecificationAttributes.GroupBy(x => x.SpecificationAttributeName);
                                                                     }
                                                                     @foreach (var item in group)
                                                                     {
                                                                         <div class="vendor-spec-name">
                                                                             @{
                                                                                 var groupList = item.ToList();
                                                                             }
                                                                             @groupList[0].SpecificationAttributeName:
                                                                         </div>
                                                                         <div class="vendor-spec-value">
                                                                             @foreach (var spec in groupList)
                                                                             {
                                                                                 <span >
                                                                                     @Html.Raw(spec.ValueRaw)
                                                                                 </span>
                                                                             }
                                                                         </div>
                                                                     }
                                                                 </div>
                                                             }   
                                                         </b-col>
                                                            <b-col lg="3" md="4" class="prices align-self-center justify-content-center" >
                                                              @{
                                                                   var dataDictPrice = new ViewDataDictionary(ViewData);
                                                                   dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", variant.Id);
                                                                   <a href="@variant.Url">
                                                                       <span class="vendor-price">@Html.Raw(variant.ProductPrice.Price)</span>
                                                                   </a>
                                                              }
                                                           </b-col>
                                                           
                                                    </b-row>  
                                                     
                                                 </b-card>  
                                                }

                                                @if (Model.AssociatedProducts.Count == 0)
                                                {
                                                    <div class="no-associated-products">
                                                        @T("Products.NoAssociatedProducts")
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </b-tab>
                                    <b-tab title="@T("Products.Specs")">
                                        <partial name="_ProductProposals" model="Model"/>
                                        <partial name="ProductDescBox" model="Model"/>
                                    </b-tab>    
                                    <b-tab title="@T("Products.ContactUs")">
                                        <partial name="_ProductProposals" model="Model"/>
                                        <partial name="_AskQuestionOnProduct" model="Model.ProductAskQuestion"/>
                                    </b-tab>
                                    <b-tab id="review-tab" title="@T("Products.Reviews")" :active="active ? true : false">
                                        <partial name="_ProductProposals" model="Model"/>
                                        @await Component.InvokeAsync("ProductReviews", new {productId = Model.Id})
                                    </b-tab>
                                </b-tabs>
                            </b-row>      
                        </b-col>
                    </b-row>
             
            </b-container>
        </div>
        @await Component.InvokeAsync("RelatedProducts", new { productId = Model.Id })
    </form>
    @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_bottom", additionalData = Model.Id })
</div>
